<?php/** * Created by PhpStorm. * User: Лука * Date: 07.05.2019 * Time: 21:54 */class DBConfig{    var $db_host = "localhost";    var $db_name = "vh379174_telegram";    var $db_user = "vh379174_root";    var $db_pass = "R3c6H1q5";    var $db_con = null;    public function __construct()    {        try        {            $this->db_con = new PDO("mysql:host={$this->db_host};dbname={$this->db_name}", $this->db_user, $this->db_pass);            $this->db_con->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);            $this->db_con->exec("set names utf8");        } catch (PDOException $e)        {            echo $e->getMessage();        }    }    public function addUser($id, $name, $username)    {        $request = $this->db_con->prepare('INSERT INTO `sarafan_users`(`telegram_id`,`telegram_name`,`telegram_username`,`register_date`) VALUES (:param1,:param2,:param3,:param4)');        $request->execute(array(            ':param1' => $id,            ':param2' => $name,            ':param3' => $username,            ':param4' => (new DateTime('now'))->format('Y-m-d H:i:s')        ));    }    public function addReview($id, $type, $stage, $content)    {        $request = $this->db_con->prepare('INSERT INTO `sarafan_reviews`(`telegram_id`, `type`, `stage`, `content`, `post_date`) VALUES (:param1,:param2,:param3,:param4,:param5)');        $request->execute(array(            ':param1' => $id,            ':param2' => $type,            ':param3' => $stage,            ':param4' => $content,            ':param5' => (new DateTime('now'))->format('Y-m-d H:i:s')        ));    }    public function userExists($id)    {        $request = $this->db_con->prepare('select count(*) as Count from `sarafan_users` where `telegram_id` = :param1');        $request->execute(array(            ':param1' => $id        ));        $result = $request->fetchAll(PDO::FETCH_OBJ);        $result = $result[0]->Count;        return $result > 0;    }    public function getUser($chat_id)    {        $request = $this->db_con->prepare('select * from `sarafan_users` where `telegram_id`=:param1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetchAll(PDO::FETCH_ASSOC);        return $result[0];    }    public function getAllUsers()    {        $request = $this->db_con->prepare('select telegram_id from `users`');        $request->execute(array());        $result = $request->fetchAll(PDO::FETCH_ASSOC);        return $result;    }    public function getStep($chat_id)    {        $request = $this->db_con->prepare('select `step` from `sarafan_users` where `telegram_id`=:param1 limit 1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetch(PDO::FETCH_ASSOC);        return $result['step'];    }    public function setStep($chat_id, $step)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `step`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $step,            ':param2' => $chat_id        ));    }    public function setLastActionDate($chat_id)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `last_action_date`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => (new DateTime('now'))->format('Y-m-d H:i:s'),            ':param2' => $chat_id        ));    }    public function setLastActionType($chat_id, $type)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `last_action_type`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $type,            ':param2' => $chat_id        ));    }    public function getPhone($chat_id)    {        $request = $this->db_con->prepare('select `phone` from `sarafan_users` where `telegram_id`=:param1 limit 1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetch(PDO::FETCH_ASSOC);        return $result['phone'];    }    public function getStage($chat_id)    {        $request = $this->db_con->prepare('select `stage` from `sarafan_users` where `telegram_id`=:param1 limit 1');        $request->execute(array(            ':param1' => $chat_id        ));        $result = $request->fetch(PDO::FETCH_ASSOC);        return $result['stage'];    }    public function setStage($chat_id, $stage)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `stage`=:param1,`has_access_next_stage`=:param3 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $stage,            ':param2' => $chat_id,            ':param3' => 0        ));    }    public function setNotify($chat_id, $count)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `notify_count`=:param1,`last_notify_date`=:param3 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $count,            ':param2' => $chat_id,            ':param3' => (new DateTime('now'))->format('Y-m-d H:i:s')        ));    }    public function setValue($chat_id, $column, $value)    {        $request = $this->db_con->prepare("UPDATE `sarafan_users` SET `$column`=:param1 WHERE `telegram_id`=:param2");        $request->execute(array(            ':param1' => $value,            ':param2' => $chat_id        ));    }    public function setAccessToNextStage($chat_id, $step)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `has_access_next_stage`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => 1,            ':param2' => $chat_id        ));    }    public function setName($chat_id, $name)    {        $request = $this->db_con->prepare('UPDATE `users` SET `name`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $name,            ':param2' => $chat_id        ));    }    public function setPhone($chat_id, $phone)    {        $request = $this->db_con->prepare('UPDATE `sarafan_users` SET `phone`=:param1 WHERE `telegram_id`=:param2');        $request->execute(array(            ':param1' => $phone,            ':param2' => $chat_id        ));    }    public function getCronUsers()    {        $requet = $this->db_con->prepare('SELECT `telegram_id`,`notify_count`,`stage`,`register_date`,`first_take_date`,`second_take_date`,`third_take_date` FROM `sarafan_users`  WHERE (register_date <= NOW() - INTERVAL 1 DAY and `stage`=0 and notify_count=0) OR(register_date <= NOW() - INTERVAL 4 DAY and `stage`=0 and notify_count=1) OR(register_date <= NOW() - INTERVAL 9 DAY and `stage`=0 and notify_count=2) OR(first_take_date <= NOW() - INTERVAL 1 DAY and `stage`=1 and notify_count=0 and `first_done_date` is null) OR(first_take_date <= NOW() - INTERVAL 4 DAY and `stage`=1 and notify_count=1 and `first_done_date` is null) OR(first_take_date <= NOW() - INTERVAL 9 DAY and `stage`=1 and notify_count=2 and `first_done_date` is null) OR(second_take_date <= NOW() - INTERVAL 1 DAY and `stage`=2 and notify_count=0 and `second_done_date` is null) OR(second_take_date <= NOW() - INTERVAL 4 DAY and `stage`=2 and notify_count=1 and `second_done_date` is null) OR(second_take_date <= NOW() - INTERVAL 9 DAY and `stage`=2 and notify_count=2 and `second_done_date` is null) OR(third_take_date <= NOW() - INTERVAL 1 DAY and `stage`=3 and notify_count=0 and `third_done_date` is null) OR(third_take_date <= NOW() - INTERVAL 4 DAY and `stage`=3 and notify_count=1 and `third_done_date` is null) OR(third_take_date <= NOW() - INTERVAL 9 DAY and `stage`=3 and notify_count=2 and `third_done_date` is null)');        $requet->execute();        return $requet->fetchAll(PDO::FETCH_OBJ);    }    function writeDump($item)    {        ob_flush();        ob_start();        var_dump($item);        file_put_contents("dump.txt", ob_get_flush());    }}